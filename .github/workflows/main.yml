name: Build NPM Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  API_URL: 'https://app.dev.veribom.com'

jobs:
  create_scan_in_IR_Portal:
    runs-on: ubuntu-latest
    outputs:
      scan_id: ${{steps.parseResponse.outputs.scan_id}}
    steps:
      - name: Initiating SBOM Scan
        id: createScan
        uses: fjogeleit/http-request-action@v1.15.1
        with:
          url: '${{env.API_URL}}/utilityapi/v1/scan'
          method: 'POST'
          data: '{"api_key": "${{secrets.VB_API_KEY}}"}'
      - name: Parse Response
        id: parseResponse
        run: echo "scan_id=${{fromJSON(steps.createScan.outputs.response).data.scan_id}}" >> "$GITHUB_OUTPUT"


  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container 
      pse:
        image: kkisalaya/pse-proxy:dev
        env:
          PSE_DEBUG_FLAG: --alsologtostderr
          POLICY_LOG: t
          INVISIRISK_JWT_TOKEN: ${{secrets.VB_API_KEY}} #WkxFvX05QDdcVUbN4AQPFNKVUo91hPpicvDitZL3RoJGEeKzzOSGaKXMeC34nEJbehBsxlT5DMF_RZ8-RQ1Lhg
          INVISIRISK_PORTAL: https://app.dev.veribom.com/
          #POLICY_AUTH_TOKEN: ${{ secrets.POLICY_AUTH_TOKEN }}
          #POLICY_URL: https://app.dev.veribom.com/
          SCAN_ID: ${{needs.create_scan_in_IR_Portal.outputs.scan_id}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    container:
      image: node:18-alpine
      options: --cap-add=NET_ADMIN
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: invisirisk/pse-action@v1.0.5
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
